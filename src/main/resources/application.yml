info:
  name: teambuiltingsport
  description: Team Builting Sports Service, microservice that stores all the sports available

server:
  port: ${PORT:8092}
---

# Queue configuration
messaging:
  amqp:
    team:
      exchange:
        name: TEAMBUILTING.E.TEAM
        durable: true
        autodelete: false
    player:
      exchange:
        name: TEAMBUILTING.E.PLAYER
        durable: true
        autodelete: false
      queue:
        name: TEAMBUILTING.Q.SPORTS.PLAYER
        binding: player.cud.#
        durable: true
        autodelete: false

---

spring:
  profiles: production
  data.mongodb:
    database: teambuiltingsports # Database name.
    host: ${MONGODB_HOST:localhost} # Mongo server host.
    port: ${MONGODB_PORT:27017} # Mongo server port.
    username: ${MONGODB_USERNAME:} # Login user of the mongo server.
    password: ${MONGODB_PASSWORD:} # Login password of the mongo server.
    repositories.enabled: true # Enable Mongo repositories.
  rabbitmq:
      host: ${RABBITMQ_HOST}
      virtual-host: ${RABBITMQ_VIRTUAL_HOST}
      username: ${RABBITMQ_USERNAME}
      password: ${RABBITMQ_PASSWORD}

---

endpoints:
  enabled: true # Enable endpoints.
  actuator.enabled: true # Enable the endpoint.

---